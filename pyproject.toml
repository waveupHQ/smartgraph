[tool.poetry]
name = "smartgraph"
version = "0.1.0"
description = "A library for building stateful, multi-actor applications with Smart Graph"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "smartgraph"}]

[tool.poetry.dependencies]
python = "^3.11"
anthropic = "^0.30.0"
python-dotenv = "^1.0.1"
networkx = "^2.8"
litellm = "^1.41.15"
pydantic = "^2.8.2"
matplotlib = "^3.9.1"
typing-extensions = "^4.12.2"
asyncio = "^3.4.3"
aiofiles = "^24.1.0"
requests = "^2.32.3"
duckduckgo-search = "^6.2.0"
jsonpickle = "^3.2.2"
rich = "^13.7.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
ruff = "^0.1.3"
black = "^23.10.0"
pre-commit = "^3.7.1"
mypy = "^1.10.1"
isort = "^5.13.2"
pytest-asyncio = "^0.23.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)
select = ["E", "F", "I", "N", "W", "D", "B", "C90", "PL"]
ignore = [
    "E501",  # Line too long
    "F401",  # Unused import
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",
    "D103",  # Missing docstring in public function
    "D107"
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 100

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11
target-version = "py311"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.pydocstyle]
convention = "google"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''